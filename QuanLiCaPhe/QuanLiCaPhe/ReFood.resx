<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAccept.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA+VJREFUaEPtmFtPE0EYhvHwB7zRK3+D3mv8C0aNMfFaEmiXqpykQAqRIsTutojh
        ZGG3QmmhLSAHiRyNJVIwmiAEg4aoDSZGjVcihoTyOd90FgpZWrZllzbhTd6kZWZn3mf7MTuzWUc60pGO
        lL6CLDjGc6LDkSeuCZwEB2U7J64KRsmO47OptJFgdF3BCQca3PDS7YFJSYLJVmfK7ne0RUEM4mU2lTbi
        OakEJ/oX7oH1lV5YDwdgbaEpZa/ON1EA3ihVsam0kQyA4de+9sDnaR8sj7bAnznlYGqM4wpGsYZNpY1i
        Ad4Ndm3V8FufUzGUGusOsOMXeK8cSo11B5CtFCYZ6w7wezEAoYAXpt1O+DmjHEqNdQdYHOsGu4ksfXkS
        LPS3KIZSY90BMr6EMh4gPOsHH98BvtpW+DKRgSUUnvVtA4w3K4ZSY90BMr6EMh5g5zL6RDGUGlMAFSbb
        +k2Bcy04DNJ5Fi+xYgHwQRb0eOCVeHAPMmu5H0rto9QVdZNgfTy1tx8FwVbgjfB5rnkWL7G0LiEMfmto
        ifr2izCUTf6Ka2vDNCk7KcLiJVYsgBbbabUAVc0heh2Ll1ixAFpsp3UF0GI7rRuAVkdKs2NMWwD5UD/U
        6IaQn2ylPRK87nCm7IG6VhrkjhjSFoC+VjGKvMMk/cULD8x326FUGIHswWh4zQCSFU4SW9/7cf7oN8XQ
        sd4TgM8Vz5J6LyaP9nto8tS7wZqSklqA7OefwDzxQzF0rPcGwPCkQTYB2GBNSWm/ANlDHyF3eBmKx78r
        Bt7teAB0tcl/0wcWMbres6akhNdX108phkjFKQNUVFScRLOveyotAepMzjOk3wc0fmZ/VlRaAJA7fZw1
        y+GXeJMUoSaf40HoD2CU8rChMNgDFnc37SRwbedYMwYa5ck5oGTADyWDfkgEoTuAzeC6hA1lfh8UBXvB
        lu/aIIHnEAIfZgInGrDdanND/mwvmIe2IWw57afZMFvSHcB33XeChFmptbRHCmb7wPzMTyGw825XOrto
        qcWDwH66AqDIQeEaNt6v66R3GX+JclJOlS0eqGz2Rt3iheKRAAXYDVGT23mKDXU4ACgCYcEOteVPI6X+
        bgohh1VywUwfPKhu38Tzqp2TLrBhDg8AZePEqyRQGDsq2SJFSwjDWx920PBkw3ebXU6Fx77q+qBiiFS8
        7yMl/Z8wtF2Mrk6ilZSIC8NjuZQMB+KGR/Gca8FW5NmwNk6DtSl0MCZj2Qo9ZHFRcaiXJXCucXkZTRQe
        ha8+cCLSvrn7F0zWOBaOqeq1iiy7UcrBwBg8Ufi0FbkLJho8E8PLImeFm2j2NQ2UlfUf+EN6bgngrR0A
        AAAASUVORK5CYII=
</value>
  </data>
</root>